# docker-compose â€” CogTechAI (43 services) + Traefik
# Target: dev routing via PathPrefix + StripPrefix; each service listens on :8000
# App traffic: http://localhost (port 80) **and** http://localhost:8081 (mapped to same Traefik entrypoint)
# Dashboard: http://localhost:8080
networks:
  ct2-net:
    driver: bridge

# ---------- Reusable snippet ----------
x-svc: &svc
  restart: unless-stopped
  networks: [ct2-net]
  environment:
    - PORT=8000
  labels:
    - traefik.enable=true
    - traefik.docker.network=ct2-net

services:
  # ---- Reverse proxy ----
  traefik:
    image: traefik:v2.11
    container_name: ct2-traefik
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=ct2_ct2-net
      - --entrypoints.web.address=:80
      - --entrypoints.traefik.address=:8080
    ports:
      - "80:80"
      - "8090:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ct2-net

  # ---- 43 backend services (container :8000) ----
  esg-service:
    <<: *svc
    container_name: ctm-esg-service-1
    build:
      context: ./apps/backend/services/esg-service
    ports: ["8007:8000"]
    labels:
     - traefik.enable=true
     - traefik.docker.network=ct2_ct2-net   # << key line
     - traefik.http.routers.esg-service.rule=PathPrefix(`/api/esg`)
     - traefik.http.middlewares.esg-service-strip.stripprefix.prefixes=/api/esg
     - traefik.http.routers.esg-service.middlewares=esg-service-strip
     - traefik.http.services.esg-service.loadbalancer.server.port=8000

  kpi-calculation-service:
    <<: *svc
    container_name: ctm-kpi-calculation-service-1
    build:
      context: ./apps/backend/services/kpi-calculation-service
    ports: ["8045:8000"]
    labels:
      - traefik.http.routers.kpi-calculation-service.rule=PathPrefix(`/api/kpi`)
      - traefik.http.services.kpi-calculation-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-kpi-calculation-service.stripprefix.prefixes=/api/kpi
      - traefik.http.routers.kpi-calculation-service.middlewares=strip-kpi-calculation-service

  emission-factors-service:
    <<: *svc
    container_name: ctm-emission-factors-service-1
    build:
      context: ./apps/backend/services/emission-factors-service
    ports: ["8022:8000"]
    labels:
      - traefik.http.routers.emission-factors-service.rule=PathPrefix(`/api/factors`)
      - traefik.http.services.emission-factors-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-emission-factors-service.stripprefix.prefixes=/api/factors
      - traefik.http.routers.emission-factors-service.middlewares=strip-emission-factors-service

  carbon-points-rules-service:
    <<: *svc
    container_name: ctm-carbon-points-rules-service-1
    build:
      context: ./apps/backend/services/carbon-points-rules-service
    ports: ["8023:8000"]
    labels:
      traefik.enable: "true"
      traefik.docker.network: ct2_ct2-net
      traefik.http.routers.ct2-cpr.rule: PathPrefix(`/api/carbon-points-rules`)
      traefik.http.routers.ct2-cpr.entrypoints: web
      traefik.http.middlewares.ct2-cpr-strip.stripprefix.prefixes: /api/carbon-points-rules
      traefik.http.routers.ct2-cpr.middlewares: ct2-cpr-strip
      traefik.http.services.ct2-cpr.loadbalancer.server.port: "8000"

  verification-service:
    <<: *svc
    container_name: ctm-verification-service-1
    build:
      context: ./apps/backend/services/verification-service
    ports: ["8024:8000"]
    labels:
      - traefik.http.routers.verification-service.rule=PathPrefix(`/api/verification`)
      - traefik.http.services.verification-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-verification-service.stripprefix.prefixes=/api/verification
      - traefik.http.routers.verification-service.middlewares=strip-verification-service

  blockchain-service:
    <<: *svc
    container_name: ctm-blockchain-service-1
    build:
      context: ./apps/backend/services/blockchain-service
    ports: ["8013:8000"]
    labels:
      traefik.enable: "true"
      traefik.docker.network: ct2_ct2-net
      traefik.http.routers.ct2-blockchain.rule: PathPrefix(`/api/blockchain`)
      traefik.http.routers.ct2-blockchain.entrypoints: web
      traefik.http.middlewares.ct2-blockchain-strip.stripprefix.prefixes: /api/blockchain
      traefik.http.routers.ct2-blockchain.middlewares: ct2-blockchain-strip
      traefik.http.services.ct2-blockchain.loadbalancer.server.port: "8000"
  alerts-service:
    <<: *svc
    container_name: ctm-alerts-service-1
    build:
      context: ./apps/backend/services/alerts-service
    ports: ["8030:8000"]
    labels:
      - traefik.http.routers.alerts-service.rule=PathPrefix(`/api/alerts`)
      - traefik.http.services.alerts-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-alerts-service.stripprefix.prefixes=/api/alerts
      - traefik.http.routers.alerts-service.middlewares=strip-alerts-service

  notification-service:
    <<: *svc
    container_name: ctm-notification-service-1
    build:
      context: ./apps/backend/services/notification-service
    ports: ["8031:8000"]
    labels:
      - traefik.http.routers.notification-service.rule=PathPrefix(`/api/notifications`)
      - traefik.http.services.notification-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-notification-service.stripprefix.prefixes=/api/notifications
      - traefik.http.routers.notification-service.middlewares=strip-notification-service

  marketplace-service:
    <<: *svc
    container_name: ctm-marketplace-service-1
    build:
      context: ./apps/backend/services/marketplace-service
    ports: ["8015:8000"]
    labels:
      - traefik.http.routers.marketplace-service.rule=PathPrefix(`/api/marketplace`)
      - traefik.http.services.marketplace-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-marketplace-service.stripprefix.prefixes=/api/marketplace
      - traefik.http.routers.marketplace-service.middlewares=strip-marketplace-service

  payment-service:
    <<: *svc
    container_name: ctm-payment-service-1
    build:
      context: ./apps/backend/services/payment-service
    ports: ["8012:8000"]
    labels:
      - traefik.http.routers.payment-service.rule=PathPrefix(`/api/payments`)
      - traefik.http.services.payment-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-payment-service.stripprefix.prefixes=/api/payments
      - traefik.http.routers.payment-service.middlewares=strip-payment-service

  wallet-service:
    <<: *svc
    container_name: ctm-wallet-service-1
    build:
      context: ./apps/backend/services/wallet-service
    ports: ["8014:8000"]
    labels:
      - traefik.http.routers.wallet-service.rule=PathPrefix(`/api/wallets`)
      - traefik.http.services.wallet-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-wallet-service.stripprefix.prefixes=/api/wallets
      - traefik.http.routers.wallet-service.middlewares=strip-wallet-service

  supplier-service:
    <<: *svc
    container_name: ctm-supplier-service-1
    build:
      context: ./apps/backend/services/supplier-service
    ports: ["8002:8000"]
    labels:
      - traefik.http.routers.supplier-service.rule=PathPrefix(`/api/suppliers`)
      - traefik.http.services.supplier-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-supplier-service.stripprefix.prefixes=/api/suppliers
      - traefik.http.routers.supplier-service.middlewares=strip-supplier-service

  client-service:
    <<: *svc
    container_name: ctm-client-service-1
    build:
      context: ./apps/backend/services/client-service
    ports: ["8004:8000"]
    labels:
      - traefik.http.routers.client-service.rule=PathPrefix(`/api/clients`)
      - traefik.http.services.client-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-client-service.stripprefix.prefixes=/api/clients
      - traefik.http.routers.client-service.middlewares=strip-client-service

  org-service:
    <<: *svc
    container_name: ctm-org-service-1
    build:
      context: ./apps/backend/services/org-service
    ports: ["8003:8000"]
    labels:
      - traefik.http.routers.org-service.rule=PathPrefix(`/api/orgs`)
      - traefik.http.services.org-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-org-service.stripprefix.prefixes=/api/orgs
      - traefik.http.routers.org-service.middlewares=strip-org-service

  user-service:
    <<: *svc
    container_name: ctm-user-service-1
    build:
      context: ./apps/backend/services/user-service
    ports: ["8005:8000"]
    labels:
      - traefik.http.routers.user-service.rule=PathPrefix(`/api/users`)
      - traefik.http.services.user-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-user-service.stripprefix.prefixes=/api/users
      - traefik.http.routers.user-service.middlewares=strip-user-service

  authz-service:
    <<: *svc
    container_name: ctm-authz-service-1
    build:
      context: ./apps/backend/services/authz-service
    ports: ["8006:8000"]
    labels:
      traefik.enable: "true"
      traefik.docker.network: ct2_ct2-net
      traefik.http.routers.ct2-iam.rule: PathPrefix(`/api/iam`)
      traefik.http.routers.ct2-iam.entrypoints: web
      traefik.http.middlewares.ct2-iam-strip.stripprefix.prefixes: /api/iam
      traefik.http.routers.ct2-iam.middlewares: ct2-iam-strip
      traefik.http.services.ct2-iam.loadbalancer.server.port: "8000"

  facility-service:
    <<: *svc
    container_name: ctm-facility-service-1
    build:
      context: ./apps/backend/services/facility-service
    ports: ["8008:8000"]
    labels:
      - traefik.http.routers.facility-service.rule=PathPrefix(`/api/facilities`)
      - traefik.http.services.facility-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-facility-service.stripprefix.prefixes=/api/facilities
      - traefik.http.routers.facility-service.middlewares=strip-facility-service

  device-catalog-service:
    <<: *svc
    container_name: ctm-device-catalog-service-1
    build:
      context: ./apps/backend/services/device-catalog-service
    ports: ["8009:8000"]
    labels:
      - traefik.http.routers.device-catalog-service.rule=PathPrefix(`/api/devices`)
      - traefik.http.services.device-catalog-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-device-catalog-service.stripprefix.prefixes=/api/devices
      - traefik.http.routers.device-catalog-service.middlewares=strip-device-catalog-service

  utility-adapter-service:
    <<: *svc
    container_name: ctm-utility-adapter-service-1
    build:
      context: ./apps/backend/services/utility-adapter-service
    ports: ["8010:8000"]
    labels:
      - traefik.http.routers.utility-adapter-service.rule=PathPrefix(`/api/utilities`)
      - traefik.http.services.utility-adapter-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-utility-adapter-service.stripprefix.prefixes=/api/utilities
      - traefik.http.routers.utility-adapter-service.middlewares=strip-utility-adapter-service

  data-import-service:
    <<: *svc
    container_name: ctm-data-import-service-1
    build:
      context: ./apps/backend/services/data-import-service
    ports: ["8011:8000"]
    labels:
      - traefik.http.routers.data-import-service.rule=PathPrefix(`/api/import`)
      - traefik.http.services.data-import-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-data-import-service.stripprefix.prefixes=/api/import
      - traefik.http.routers.data-import-service.middlewares=strip-data-import-service

  file-service:
    <<: *svc
    container_name: ctm-file-service-1
    build:
      context: ./apps/backend/services/file-service
    ports: ["8025:8000"]
    labels:
      - traefik.http.routers.file-service.rule=PathPrefix(`/api/files`)
      - traefik.http.services.file-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-file-service.stripprefix.prefixes=/api/files
      - traefik.http.routers.file-service.middlewares=strip-file-service

  time-series-service:
    <<: *svc
    container_name: ctm-time-series-service-1
    build:
      context: ./apps/backend/services/time-series-service
    ports: ["8021:8000"]
    labels:
      - traefik.http.routers.time-series-service.rule=PathPrefix(`/api/timeseries`)
      - traefik.http.services.time-series-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-time-series-service.stripprefix.prefixes=/api/timeseries
      - traefik.http.routers.time-series-service.middlewares=strip-time-series-service

  search-index-service:
    <<: *svc
    container_name: ctm-search-index-service-1
    build:
      context: ./apps/backend/services/search-index-service
    ports: ["8052:8000"]
    labels:
      - traefik.http.routers.search-index-service.rule=PathPrefix(`/api/search`)
      - traefik.http.services.search-index-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-search-index-service.stripprefix.prefixes=/api/search
      - traefik.http.routers.search-index-service.middlewares=strip-search-index-service

  analytics-query-service:
    <<: *svc
    container_name: ctm-analytics-query-service-1
    build:
      context: ./apps/backend/services/analytics-query-service
    ports: ["8055:8000"]
    labels:
      - traefik.http.routers.analytics-query-service.rule=PathPrefix(`/api/analytics`)
      - traefik.http.services.analytics-query-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-analytics-query-service.stripprefix.prefixes=/api/analytics
      - traefik.http.routers.analytics-query-service.middlewares=strip-analytics-query-service

  dashboards-service:
    <<: *svc
    container_name: ctm-dashboards-service-1
    build:
      context: ./apps/backend/services/dashboards-service
    ports: ["8050:8000"]
    labels:
      - traefik.http.routers.dashboards-service.rule=PathPrefix(`/api/dashboards`)
      - traefik.http.services.dashboards-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-dashboards-service.stripprefix.prefixes=/api/dashboards
      - traefik.http.routers.dashboards-service.middlewares=strip-dashboards-service

  reporting-service:
    <<: *svc
    container_name: ctm-reporting-service-1
    build:
      context: ./apps/backend/services/reporting-service
    ports: ["8016:8000"]
    labels:
      - traefik.http.routers.reporting-service.rule=PathPrefix(`/api/reporting`)
      - traefik.http.services.reporting-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-reporting-service.stripprefix.prefixes=/api/reporting
      - traefik.http.routers.reporting-service.middlewares=strip-reporting-service

  jobs-service:
    <<: *svc
    container_name: ctm-jobs-service-1
    build:
      context: ./apps/backend/services/jobs-service
    ports: ["8056:8000"]
    labels:
      - traefik.http.routers.jobs-service.rule=PathPrefix(`/api/jobs`)
      - traefik.http.services.jobs-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-jobs-service.stripprefix.prefixes=/api/jobs
      - traefik.http.routers.jobs-service.middlewares=strip-jobs-service

  scheduler-service:
    <<: *svc
    container_name: ctm-scheduler-service-1
    build:
      context: ./apps/backend/services/scheduler-service
    ports: ["8018:8000"]
    labels:
      - traefik.http.routers.scheduler-service.rule=PathPrefix(`/api/scheduler`)
      - traefik.http.services.scheduler-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-scheduler-service.stripprefix.prefixes=/api/scheduler
      - traefik.http.routers.scheduler-service.middlewares=strip-scheduler-service

  procurement-connector-service:
    <<: *svc
    container_name: ctm-procurement-connector-service-1
    build:
      context: ./apps/backend/services/procurement-connector-service
    ports: ["8017:8000"]
    labels:
      - traefik.http.routers.procurement-connector-service.rule=PathPrefix(`/api/procurement`)
      - traefik.http.services.procurement-connector-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-procurement-connector-service.stripprefix.prefixes=/api/procurement
      - traefik.http.routers.procurement-connector-service.middlewares=strip-procurement-connector-service

  api-keys-service:
    <<: *svc
    container_name: ctm-api-keys-service-1
    build:
      context: ./apps/backend/services/api-keys-service
    ports: ["8019:8000"]
    labels:
      - traefik.http.routers.api-keys-service.rule=PathPrefix(`/api/api-keys`)
      - traefik.http.services.api-keys-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-api-keys-service.stripprefix.prefixes=/api/api-keys
      - traefik.http.routers.api-keys-service.middlewares=strip-api-keys-service

  data-warehouse-writer-service:
    <<: *svc
    container_name: ctm-data-warehouse-writer-service-1
    build:
      context: ./apps/backend/services/data-warehouse-writer-service
    ports: ["8020:8000"]
    labels:
      - traefik.http.routers.data-warehouse-writer-service.rule=PathPrefix(`/api/dwh`)
      - traefik.http.services.data-warehouse-writer-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-data-warehouse-writer-service.stripprefix.prefixes=/api/dwh
      - traefik.http.routers.data-warehouse-writer-service.middlewares=strip-data-warehouse-writer-service

  ingestion-service:
    <<: *svc
    container_name: ctm-ingestion-service-1
    build:
      context: ./apps/backend/services/ingestion-service
    ports: ["8032:8000"]
    labels:
      - traefik.http.routers.ingestion-service.rule=PathPrefix(`/api/ingest`)
      - traefik.http.services.ingestion-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-ingestion-service.stripprefix.prefixes=/api/ingest
      - traefik.http.routers.ingestion-service.middlewares=strip-ingestion-service

  data-quality-service:
    <<: *svc
    container_name: ctm-data-quality-service-1
    build:
      context: ./apps/backend/services/data-quality-service
    ports: ["8051:8000"]
    labels:
      - traefik.http.routers.data-quality-service.rule=PathPrefix(`/api/data-quality`)
      - traefik.http.services.data-quality-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-data-quality-service.stripprefix.prefixes=/api/data-quality
      - traefik.http.routers.data-quality-service.middlewares=strip-data-quality-service

  compliance-copilot-service:
    <<: *svc
    container_name: ctm-compliance-copilot-service-1
    build:
      context: ./apps/backend/services/compliance-copilot-service
    ports: ["8034:8000"]
    labels:
      - traefik.http.routers.compliance-copilot-service.rule=PathPrefix(`/api/copilot`)
      - traefik.http.services.compliance-copilot-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-compliance-copilot-service.stripprefix.prefixes=/api/copilot
      - traefik.http.routers.compliance-copilot-service.middlewares=strip-compliance-copilot-service

  supplier-assessment-service:
    <<: *svc
    container_name: ctm-supplier-assessment-service-1
    build:
      context: ./apps/backend/services/supplier-assessment-service
    ports: ["8053:8000"]
    labels:
      - traefik.http.routers.supplier-assessment-service.rule=PathPrefix(`/api/supplier-assessments`)
      - traefik.http.services.supplier-assessment-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-supplier-assessment-service.stripprefix.prefixes=/api/supplier-assessments
      - traefik.http.routers.supplier-assessment-service.middlewares=strip-supplier-assessment-service

  materiality-service:
    <<: *svc
    container_name: ctm-materiality-service-1
    build:
      context: ./apps/backend/services/materiality-service
    ports: ["8054:8000"]
    labels:
      - traefik.http.routers.materiality-service.rule=PathPrefix(`/api/materiality`)
      - traefik.http.services.materiality-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-materiality-service.stripprefix.prefixes=/api/materiality
      - traefik.http.routers.materiality-service.middlewares=strip-materiality-service

  brsr-adapter-service:
    <<: *svc
    container_name: ctm-brsr-adapter-service-1
    build:
      context: ./apps/backend/services/brsr-adapter-service
    ports: ["8035:8000"]
    labels:
      traefik.enable: "true"
      traefik.docker.network: ct2_ct2-net
      traefik.http.routers.ct2-brsr.rule: PathPrefix(`/api/brsr`)
      traefik.http.routers.ct2-brsr.entrypoints: web
      traefik.http.middlewares.ct2-brsr-strip.stripprefix.prefixes: /api/brsr
      traefik.http.routers.ct2-brsr.middlewares: ct2-brsr-strip
      traefik.http.services.ct2-brsr.loadbalancer.server.port: "8000"

  risk-mapping-service:
    <<: *svc
    container_name: ctm-risk-mapping-service-1
    build:
      context: ./apps/backend/services/risk-mapping-service
    ports: ["8033:8000"]
    labels:
      - traefik.http.routers.risk-mapping-service.rule=PathPrefix(`/api/esg-risk`)
      - traefik.http.services.risk-mapping-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-risk-mapping-service.stripprefix.prefixes=/api/esg-risk
      - traefik.http.routers.risk-mapping-service.middlewares=strip-risk-mapping-service

  report-compiler-service:
    <<: *svc
    container_name: ctm-report-compiler-service-1
    build:
      context: ./apps/backend/services/report-compiler-service
    ports: ["8057:8000"]
    labels:
      - traefik.http.routers.report-compiler-service.rule=PathPrefix(`/api/reports`)
      - traefik.http.services.report-compiler-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-report-compiler-service.stripprefix.prefixes=/api/reports
      - traefik.http.routers.report-compiler-service.middlewares=strip-report-compiler-service

  governance-service:
    <<: *svc
    container_name: ctm-governance-service-1
    build:
      context: ./apps/backend/services/governance-service
    ports: ["8058:8000"]
    labels:
      - traefik.http.routers.governance-service.rule=PathPrefix(`/api/governance`)
      - traefik.http.services.governance-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-governance-service.stripprefix.prefixes=/api/governance
      - traefik.http.routers.governance-service.middlewares=strip-governance-service

  xbrl-mapping-service:
    <<: *svc
    container_name: ctm-xbrl-mapping-service-1
    build:
      context: ./apps/backend/services/xbrl-mapping-service
    ports: ["8059:8000"]
    labels:
      - traefik.http.routers.xbrl-mapping-service.rule=PathPrefix(`/api/xbrl`)
      - traefik.http.services.xbrl-mapping-service.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-xbrl-mapping-service.stripprefix.prefixes=/api/xbrl
      - traefik.http.routers.xbrl-mapping-service.middlewares=strip-xbrl-mapping-service

  device-ingest-gateway:
    <<: *svc
    container_name: ctm-device-ingest-gateway-1
    build:
      context: ./apps/backend/services/device-ingest-gateway
    ports: ["8037:8000"]
    labels:
      - traefik.http.routers.device-ingest-gateway.rule=PathPrefix(`/api/device-ingest`)
      - traefik.http.services.device-ingest-gateway.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-device-ingest-gateway.stripprefix.prefixes=/api/device-ingest
      - traefik.http.routers.device-ingest-gateway.middlewares=strip-device-ingest-gateway

  evidence-store:
    <<: *svc
    container_name: ctm-evidence-store-1
    build:
      context: ./apps/backend/services/evidence-store
    ports: ["8061:8000"]
    labels:
      - traefik.http.routers.evidence-store.rule=PathPrefix(`/api/evidence`)
      - traefik.http.services.evidence-store.loadbalancer.server.port=8000
      - traefik.http.middlewares.strip-evidence-store.stripprefix.prefixes=/api/evidence
      - traefik.http.routers.evidence-store.middlewares=strip-evidence-store
