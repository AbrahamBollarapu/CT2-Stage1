# docker-compose.override.yml â€” CT2 S1 (network aliases + env + Traefik routers)

services:
  traefik:
    image: traefik:v3.0
    restart: unless-stopped
    command:
      - --api=true
      - --api.dashboard=true
      - --entrypoints.web.address=:8081
      - --entrypoints.traefik.address=:8090
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=ct2-net
      - --accesslog=true
      - --log.level=INFO
    ports: ["8081:8081","8090:8090"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      ct2-net:
        aliases: [traefik]

  report-compiler-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/reports]
    networks:
      ct2-net:
        aliases: [report-compiler-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.reports.rule=PathPrefix(`/api/reports`)
      - traefik.http.routers.reports.entrypoints=web
      - traefik.http.services.reports.loadbalancer.server.port=8000

  esg-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/esg]
    networks:
      ct2-net:
        aliases: [esg-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.esg.rule=PathPrefix(`/api/esg`)
      - traefik.http.routers.esg.entrypoints=web
      - traefik.http.services.esg.loadbalancer.server.port=8000

  ingestion-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/ingest]
    networks:
      ct2-net:
        aliases: [ingestion-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.ingest.rule=(PathPrefix(`/api/ingest`) || PathPrefix(`/api/ingestion`))
      - traefik.http.routers.ingest.entrypoints=web
      - traefik.http.services.ingest.loadbalancer.server.port=8000

  evidence-store:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/evidence]
    networks:
      ct2-net:
        aliases: [evidence-store]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.evidence.rule=PathPrefix(`/api/evidence`)
      - traefik.http.routers.evidence.entrypoints=web
      - traefik.http.services.evidence.loadbalancer.server.port=8000

  time-series-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/timeseries]
    networks:
      ct2-net:
        aliases: [time-series-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.timeseries.rule=PathPrefix(`/api/timeseries`)
      - traefik.http.routers.timeseries.entrypoints=web
      - traefik.http.services.timeseries.loadbalancer.server.port=8000

  emission-factors-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/factors]
    networks:
      ct2-net:
        aliases: [emission-factors-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.factors.rule=PathPrefix(`/api/factors`)
      - traefik.http.routers.factors.entrypoints=web
      - traefik.http.services.factors.loadbalancer.server.port=8000

  data-quality-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/data-quality]
    networks:
      ct2-net:
        aliases: [data-quality-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.data-quality.rule=(PathPrefix(`/api/data-quality`) || PathPrefix(`/api/dataquality`))
      - traefik.http.routers.data-quality.entrypoints=web
      - traefik.http.services.data-quality.loadbalancer.server.port=8000

  kpi-calculation-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/kpi]
    networks:
      ct2-net:
        aliases: [kpi-calculation-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.kpi.rule=PathPrefix(`/api/kpi`)
      - traefik.http.routers.kpi.entrypoints=web
      - traefik.http.services.kpi.loadbalancer.server.port=8000

  xbrl-mapping-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/xbrl]
    networks:
      ct2-net:
        aliases: [xbrl-mapping-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.xbrl.rule=PathPrefix(`/api/xbrl`)
      - traefik.http.routers.xbrl.entrypoints=web
      - traefik.http.services.xbrl.loadbalancer.server.port=8000

  dashboards-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/dash]
    networks:
      ct2-net:
        aliases: [dashboards-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.dash.rule=(PathPrefix(`/api/dash`) || PathPrefix(`/api/dashboards`))
      - traefik.http.routers.dash.entrypoints=web
      - traefik.http.services.dash.loadbalancer.server.port=8000

  search-index-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/search]
    networks:
      ct2-net:
        aliases: [search-index-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.search.rule=(PathPrefix(`/api/search`) || PathPrefix(`/api/search-index`))
      - traefik.http.routers.search.entrypoints=web
      - traefik.http.services.search.loadbalancer.server.port=8000

  jobs-service:
    environment: [HOST=0.0.0.0, PORT=8000, SERVICE_PREFIX=/api/jobs]
    networks:
      ct2-net:
        aliases: [jobs-service]
    labels:
      - traefik.enable=true
      - traefik.docker.network=ct2-net
      - traefik.http.routers.jobs.rule=PathPrefix
