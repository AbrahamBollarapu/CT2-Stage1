services:
  ingestion-service:
    command: ["sh","-lc","node dist/index.js || node dist/server.js || node server.js || node -e "const http=require(\"http\");const pre=process.env.SERVICE_PREFIX||\"/api/service\";const port=+(process.env.PORT||8000);http.createServer((req,res)=>{if(req.url===pre+\"/health\"){res.setHeader(\"Content-Type\",\"application/json\");res.end(JSON.stringify({ok:true,service:pre.split(\"/\").pop(),fallback:true}))}else{res.statusCode=404;res.end(\"not found\")}}).listen(port,\"0.0.0.0\");console.log(\"[fallback]\",port,pre)""]
  emission-factors-service:
    command: ["sh","-lc","node dist/index.js || node dist/server.js || node server.js || node -e "const http=require(\"http\");const pre=process.env.SERVICE_PREFIX||\"/api/service\";const port=+(process.env.PORT||8000);http.createServer((req,res)=>{if(req.url===pre+\"/health\"){res.setHeader(\"Content-Type\",\"application/json\");res.end(JSON.stringify({ok:true,service:pre.split(\"/\").pop(),fallback:true}))}else{res.statusCode=404;res.end(\"not found\")}}).listen(port,\"0.0.0.0\");console.log(\"[fallback]\",port,pre)""]
  data-quality-service:
    command: ["sh","-lc","node dist/index.js || node dist/server.js || node server.js || node -e "const http=require(\"http\");const pre=process.env.SERVICE_PREFIX||\"/api/service\";const port=+(process.env.PORT||8000);http.createServer((req,res)=>{if(req.url===pre+\"/health\"){res.setHeader(\"Content-Type\",\"application/json\");res.end(JSON.stringify({ok:true,service:pre.split(\"/\").pop(),fallback:true}))}else{res.statusCode=404;res.end(\"not found\")}}).listen(port,\"0.0.0.0\");console.log(\"[fallback]\",port,pre)""]
  kpi-calculation-service:
    command: ["sh","-lc","node dist/index.js || node dist/server.js || node server.js || node -e "const http=require(\"http\");const pre=process.env.SERVICE_PREFIX||\"/api/service\";const port=+(process.env.PORT||8000);http.createServer((req,res)=>{if(req.url===pre+\"/health\"){res.setHeader(\"Content-Type\",\"application/json\");res.end(JSON.stringify({ok:true,service:pre.split(\"/\").pop(),fallback:true}))}else{res.statusCode=404;res.end(\"not found\")}}).listen(port,\"0.0.0.0\");console.log(\"[fallback]\",port,pre)""]
  dashboards-service:
    command: ["sh","-lc","node dist/index.js || node dist/server.js || node server.js || node -e "const http=require(\"http\");const pre=process.env.SERVICE_PREFIX||\"/api/service\";const port=+(process.env.PORT||8000);http.createServer((req,res)=>{if(req.url===pre+\"/health\"){res.setHeader(\"Content-Type\",\"application/json\");res.end(JSON.stringify({ok:true,service:pre.split(\"/\").pop(),fallback:true}))}else{res.statusCode=404;res.end(\"not found\")}}).listen(port,\"0.0.0.0\");console.log(\"[fallback]\",port,pre)""]
  search-index-service:
    command: ["sh","-lc","node dist/index.js || node dist/server.js || node server.js || node -e "const http=require(\"http\");const pre=process.env.SERVICE_PREFIX||\"/api/service\";const port=+(process.env.PORT||8000);http.createServer((req,res)=>{if(req.url===pre+\"/health\"){res.setHeader(\"Content-Type\",\"application/json\");res.end(JSON.stringify({ok:true,service:pre.split(\"/\").pop(),fallback:true}))}else{res.statusCode=404;res.end(\"not found\")}}).listen(port,\"0.0.0.0\");console.log(\"[fallback]\",port,pre)""]
  jobs-service:
    command: ["sh","-lc","node dist/index.js || node dist/server.js || node server.js || node -e "const http=require(\"http\");const pre=process.env.SERVICE_PREFIX||\"/api/service\";const port=+(process.env.PORT||8000);http.createServer((req,res)=>{if(req.url===pre+\"/health\"){res.setHeader(\"Content-Type\",\"application/json\");res.end(JSON.stringify({ok:true,service:pre.split(\"/\").pop(),fallback:true}))}else{res.statusCode=404;res.end(\"not found\")}}).listen(port,\"0.0.0.0\");console.log(\"[fallback]\",port,pre)""]
