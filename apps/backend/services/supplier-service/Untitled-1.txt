name: ct2-compose-ci
on: [push, pull_request]

jobs:
  up-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start stack
        run: |
          docker compose \
            -f compose/docker-compose.yml \
            -f compose/docker-compose.traefik.yml \
            -f compose/docker-compose.days1-4.yml \
            -f compose/docker-compose.routers.yml \
            -f compose/docker-compose.ts-override.yml \
            up -d
          sleep 5

      - name: Install PowerShell + Pester 3
        run: |
          sudo apt-get update
          sudo apt-get install -y powershell
          pwsh -NoLogo -NoProfile -Command 'Install-Module Pester -Scope CurrentUser -Force -RequiredVersion 3.4.0'

      - name: Golden path test (Pester 3)
        shell: pwsh
        run: |
          $base="http://localhost:8081"
          $pts = @{
            org_id="demo"; meter="grid_kwh"; unit="kWh";
            points=@(
              @{ ts="2024-11-05T00:00:00Z"; value=118.0 },
              @{ ts="2024-12-05T00:00:00Z"; value=121.3 }
            )
          } | ConvertTo-Json -Depth 5
          $test = @"
          Describe 'CT2 golden path' {
            It 'Seed TS -> ESG footprint -> DQ -> KPI' {
              \$seed = Invoke-RestMethod -Method Post '$base/api/time-series/ingest' -ContentType 'application/json' -Body '$pts'
              \$seed.ok | Should Be \$true
              \$b = @{org_id='demo'; meter='grid_kwh'; unit='kWh'; from='2024-10-01'; to='2024-12-31'} | ConvertTo-Json
              \$esg = Invoke-RestMethod -Method Post '$base/api/esg/footprint' -ContentType 'application/json' -Body \$b
              \$esg.ok | Should Be \$true
              \$dq  = Invoke-RestMethod -Method Post '$base/api/data-quality/checks' -ContentType 'application/json' -Body \$b
              \$dq.ok | Should Be \$true
              (Invoke-WebRequest '$base/api/kpi/energy?org_id=demo&meter=grid_kwh&unit=kWh&from=2024-10-01&to=2024-12-31' -UseBasicParsing).StatusCode | Should Be 200
            }
          }
"@
          Set-Content -Path ./ct2.golden.tests.ps1 -Value $test -Encoding UTF8
          pwsh -NoLogo -NoProfile -Command "Invoke-Pester -Path ./ct2.golden.tests.ps1 -CI"

      - name: Dump logs on fail
        if: failure()
        run: docker compose logs --no-color
